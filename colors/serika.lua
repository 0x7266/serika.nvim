vim.g.colors_name = "serika"

vim.o.termguicolors = true

vim.cmd.highlight("clear")

if vim.fn.exists("syntax_on") then
	vim.cmd.syntax("reset")
end

local colors = {
	green = "#98C379",
	neutral_900 = "#2C2E31",
	neutral_800 = "#323437",
	neutral_700 = "#646669",
	neutral_600 = "#D1D0C5",
	neutral_500 = "#DCDBCF",
	red_1 = "#7E2A33",
	red_2 = "#CA4754",
	white = "#D1D0C5",
	yellow_1 = "#E2B714",
	yellow_2 = "#FFCE00",
}

local groups = {
	Added = { fg = colors.green },
	Attribute = {},
	Bold = {},
	Boolean = {},
	Changed = {},
	Character = {},
	Class = {},
	-- CmpItemAbbr = {},
	-- CmpItemAbbrDeprecated = {},
	-- CmpItemAbbrMatch = {},
	-- CmpItemAbbrMatchFuzzy = {},
	-- CmpItemKind = {},
	-- CmpItemKindClass = {},
	-- CmpItemKindColor = {},
	-- CmpItemKindConstant = {},
	-- CmpItemKindConstructor = {},
	-- CmpItemKindCopilot = {},
	-- CmpItemKindEnum = {},
	-- CmpItemKindEnumMember = {},
	-- CmpItemKindEvent = {},
	-- CmpItemKindField = {},
	-- CmpItemKindFile = {},
	-- CmpItemKindFolder = {},
	-- CmpItemKindFunction = {},
	-- CmpItemKindInterface = {},
	-- CmpItemKindKeyword = {},
	-- CmpItemKindMethod = {},
	-- CmpItemKindModule = {},
	-- CmpItemKindOperator = {},
	-- CmpItemKindProperty = {},
	-- CmpItemKindReference = {},
	-- CmpItemKindSnippet = {},
	-- CmpItemKindStruct = {},
	-- CmpItemKindText = {},
	-- CmpItemKindTypeParameter = {},
	-- CmpItemKindUnit = {},
	-- CmpItemKindValue = {},
	-- CmpItemKindVariable = {},
	-- CmpItemMenu = {},
	ColorColumn = {},
	Comment = { fg = colors.neutral_700 },
	Conceal = {},
	Conditional = {},
	Constant = {},
	CurSearch = { link = "Search" },
	Cursor = { bg = colors.white, fg = colors.neutral_900 },
	CursorColumn = {},
	CursorIM = { link = "Cursor" },
	CursorLine = { bg = colors.neutral_900 },
	CursorLineFold = {},
	CursorLineNr = { link = "CursorLine" },
	CursorLineSign = {},
	Debug = {},
	Define = {},
	Deleted = { fg = colors.red_1 },
	Delimiter = {},
	DiagnosticDeprecated = {},
	DiagnosticError = {},
	DiagnosticFloatingError = {},
	DiagnosticFloatingHint = {},
	DiagnosticFloatingInfo = {},
	DiagnosticFloatingOk = {},
	DiagnosticFloatingWarn = {},
	DiagnosticHint = {},
	DiagnosticInfo = {},
	DiagnosticOk = {},
	DiagnosticSignError = { fg = colors.red_1 },
	DiagnosticSignHint = { fg = colors.neutral_600 },
	DiagnosticSignInfo = { fg = colors.neutral_600 },
	DiagnosticSignOk = { fg = colors.green },
	DiagnosticSignWarn = { fg = colors.red_2 },
	DiagnosticUnderlineError = {},
	DiagnosticUnderlineHint = {},
	DiagnosticUnderlineInfo = {},
	DiagnosticUnderlineOk = {},
	DiagnosticUnderlineWarn = {},
	DiagnosticUnnecessary = {},
	DiagnosticVirtualTextError = { fg = colors.red_1 },
	DiagnosticVirtualTextHint = { fg = colors.neutral_600 },
	DiagnosticVirtualTextInfo = { fg = colors.neutral_600 },
	DiagnosticVirtualTextOk = { fg = colors.green },
	DiagnosticVirtualTextWarn = { fg = colors.red_2 },
	DiagnosticWarn = {},
	DiffAdd = { link = "Added" },
	DiffChange = { link = "Changed" },
	DiffDelete = { link = "Deleted" },
	DiffText = {},
	Directory = { fg = colors.yellow_1 },
	EndOfBuffer = {},
	Error = { fg = colors.red_1 },
	ErrorMsg = { link = "Error" },
	Exception = {},
	Field = {},
	Float = { bg = colors.neutral_900 },
	FloatBorder = { bg = colors.neutral_900, fg = colors.neutral_900 },
	FloatFooter = {},
	FloatShadow = {},
	FloatShadowThrough = {},
	FloatTitle = {},
	FoldColumn = {},
	Folded = {},
	Function = {},
	GitGutterAddLineNr = {},
	GitGutterChangeLineNr = {},
	GitGutterDeleteLineNr = {},
	GitSignsAdd = { fg = colors.green },
	GitSignsAddInline = { link = "GitSignsAdd" },
	GitSignsAddLn = { link = "GitSignsAdd" },
	GitSignsAddLnInline = { link = "GitSignsAdd" },
	GitSignsAddNr = { link = "GitSignsAdd" },
	GitSignsAddPreview = { link = "GitSignsAdd" },
	GitSignsChange = { fg = colors.green },
	GitSignsChangeInline = { link = "GitSignsChange" },
	GitSignsChangeLn = { link = "GitSignsChange" },
	GitSignsChangeLnInline = { link = "GitSignsChange" },
	GitSignsChangeNr = { link = "GitSignsChange" },
	GitSignsChangedelete = {},
	GitSignsChangedeleteLn = {},
	GitSignsChangedeleteNr = {},
	GitSignsCurrentLineBlame = {},
	GitSignsDelete = { fg = colors.red_1 },
	GitSignsDeleteInline = { link = "GitSignsDelete" },
	GitSignsDeleteLnInline = { link = "GitSignsDelete" },
	GitSignsDeleteNr = { link = "GitSignsDelete" },
	GitSignsDeletePreview = { link = "GitSignsDelete" },
	GitSignsDeleteVirtLn = {},
	GitSignsDeleteVirtLnInLine = {},
	GitSignsStagedAdd = { link = "GitSignsAdd" },
	GitSignsStagedAddLn = { link = "GitSignsAdd" },
	GitSignsStagedAddNr = { link = "GitSignsAdd" },
	GitSignsStagedChange = {},
	GitSignsStagedChangeLn = {},
	GitSignsStagedChangeNr = {},
	GitSignsStagedChangedelete = {},
	GitSignsStagedChangedeleteLn = {},
	GitSignsStagedChangedeleteNr = {},
	GitSignsStagedDelete = { link = "GitSignsDelete" },
	GitSignsStagedDeleteNr = { link = "GitSignsDelete" },
	GitSignsStagedTopdelete = { link = "GitSignsDelete" },
	GitSignsStagedTopdeleteNr = { link = "GitSignsDelete" },
	GitSignsTopdelete = { link = "GitSignsDelete" },
	GitSignsTopdeleteNr = { link = "GitSignsDelete" },
	GitSignsUntracked = {},
	GitSignsUntrackedLn = {},
	GitSignsUntrackedNr = {},
	GitSignsVirtLnum = {},
	Identifier = {},
	Ignore = {},
	IncSearch = { link = "Search" },
	Include = {},
	Italic = {},
	Keyword = {},
	Label = {},
	LazyH1 = { bg = colors.yellow },
	LazyNormal = { link = "Float" },
	LineNr = {},
	LineNrAbove = { fg = colors.neutral_700 },
	LineNrBelow = { fg = colors.neutral_700 },
	LspCodeLens = {},
	LspCodeLensSeparator = {},
	LspInlayHint = { fg = colors.neutral_700 },
	LspReferenceRead = {},
	LspReferenceText = {},
	LspReferenceWrite = {},
	LspSignatureActiveParameter = { fg = colors.neutral_700 },
	Macro = {},
	-- MasonError = {},
	MasonHeader = { bg = "NONE", fg = colors.yellow_1 },
	MasonHeaderSecondary = { bg = colors.neutral_900 },
	-- MasonHeading = {},
	MasonHighlight = { fg = colors.yellow },
	MasonHighlightBlock = {},
	MasonHighlightBlockBold = {},
	MasonHighlightBlockBoldSecondary = {},
	MasonHighlightBlockSecondary = {},
	MasonHighlightSecondary = {},
	MasonLink = {},
	MasonMuted = {},
	MasonMutedBlock = {},
	MasonMutedBlockBold = {},
	MasonNormal = { link = "Float" },
	MasonWarning = {},
	MatchParen = {},
	Method = {},
	ModeMsg = { fg = colors.yellow_1 },
	MoreMsg = {},
	MsgArea = {},
	MsgSeparator = {},
	NonText = {},
	Normal = { bg = colors.neutral_800, fg = colors.neutral_600 },
	NormalFloat = {},
	NormalNC = {},
	Number = {},
	Operator = {},
	Parameter = {},
	Pmenu = { bg = colors.neutral_900, fg = colors.neutral_700 },
	PmenuExtra = {},
	PmenuExtraSel = {},
	PmenuKind = {},
	PmenuKindSel = {},
	PmenuSbar = {},
	PmenuSel = { bg = colors.neutral_800, fg = colors.white },
	PmenuThumb = {},
	PreCondit = {},
	PreProc = {},
	Property = {},
	Punctuation = {},
	Question = {},
	QuickFixLine = {},
	RedrawDebugClear = {},
	RedrawDebugComposed = {},
	RedrawDebugNormal = {},
	RedrawDebugRecompose = {},
	Removed = {},
	Repeat = {},
	Search = { link = "Visual" },
	SignColumn = {},
	SnippetTabstop = {},
	Special = {},
	SpecialChar = {},
	SpecialComment = {},
	SpecialKey = {},
	SpellBad = {},
	SpellCap = {},
	SpellLocal = {},
	SpellRare = {},
	Statement = {},
	StatusLine = { bg = colors.neutral_900, fg = colors.neutral_600 },
	StatusLineNC = {},
	StorageClass = {},
	String = { fg = colors.yellow_1 },
	Struct = {},
	Structure = {},
	Substitute = {},
	TabLine = {},
	TabLineFill = {},
	TabLineSel = {},
	Tag = {},
	TermCursor = {},
	TermCursorNC = {},
	Title = {},
	Todo = {},
	Type = {},
	Typedef = {},
	Underlined = {},
	VertSplit = {},
	Visual = { bg = colors.neutral_900, fg = colors.white },
	VisualNC = {},
	VisualNOS = {},
	WarningMsg = {},
	Whitespace = {},
	WildMenu = {},
	WinBar = {},
	WinBarNC = {},
	WinSeparator = {},
	lCursor = { link = "Cursor" },
	["@variable"] = {},
}

for group, parameters in pairs(groups) do
	vim.api.nvim_set_hl(0, group, parameters)
end
